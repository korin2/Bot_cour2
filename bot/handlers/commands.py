from telegram import Update
from telegram.ext import ContextTypes, CommandHandler
import logging
import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–æ–≤
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))

from bot.config import logger
from bot.handlers.keyboards import get_main_menu_keyboard
from bot.services.deepseek_api import ask_deepseek
from bot.services.cbr_api import get_key_rate
from db import update_user_info

logger = logging.getLogger(__name__)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    try:
        user = update.effective_user
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –ë–î
        await update_user_info(user.id, user.first_name, user.username)
        
        # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        greeting = f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!" if user.first_name else "–ü—Ä–∏–≤–µ—Ç!"
        
        # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        key_rate_data = get_key_rate()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ò–ò
        test_ai = await ask_deepseek("test")
        ai_available = not (test_ai.startswith("‚ùå") or test_ai.startswith("‚è∞"))
        
        start_message = f'{greeting} –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–æ–º!\n\n'
        start_message += 'üèõ <b>–û–§–ò–¶–ò–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –¶–ë –†–§ + –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–´ + –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ò–ò</b>\n\n'
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—é—á–µ–≤–æ–π —Å—Ç–∞–≤–∫–µ –≤ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
        if key_rate_data and key_rate_data.get('is_current'):
            rate = key_rate_data['rate']
            start_message += f'üíé <b>–ö–ª—é—á–µ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¶–ë –†–§:</b> <b>{rate:.2f}%</b>\n\n'
        
        if not ai_available:
            start_message += '‚ö†Ô∏è <i>–ò–ò –ø–æ–º–æ—â–Ω–∏–∫ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω</i>\n\n'
            
        start_message += '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:'
        
        await update.message.reply_text(
            start_message,
            parse_mode='HTML',
            reply_markup=get_main_menu_keyboard(ai_available)
        )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start: {e}")
        await update.message.reply_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    try:
        user = update.effective_user
        greeting = f", {user.first_name}!" if user.first_name else "!"
        
        help_text = (
            f"–ü—Ä–∏–≤–µ—Ç{greeting} –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ò–ò –ø–æ–º–æ—â–Ω–∏–∫–æ–º!\n\n"
            
            "üèõ <b>–û–§–ò–¶–ò–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –¶–ë –†–§ + –ö–†–ò–ü–¢–û–í–ê–õ–Æ–¢–´ + –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô –ò–ò</b>\n\n"
            
            "üí± <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
            "‚Ä¢ <code>/start</code> - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "‚Ä¢ <code>/rates</code> - –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç –¶–ë –†–§ —Å –ø—Ä–æ–≥–Ω–æ–∑–æ–º –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n"
            "‚Ä¢ <code>/crypto</code> - –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç\n"
            "‚Ä¢ <code>/keyrate</code> - –∫–ª—é—á–µ–≤–∞—è —Å—Ç–∞–≤–∫–∞ –¶–ë –†–§\n"
            "‚Ä¢ <code>/ai</code> - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ò–ò –ø–æ–º–æ—â–Ω–∏–∫\n"
            "‚Ä¢ <code>/myalerts</code> - –º–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
            "‚Ä¢ <code>/debug_alerts</code> - –æ—Ç–ª–∞–¥–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n"
            "‚Ä¢ <code>/help</code> - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n\n"
            
            "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n"
            "‚Ä¢ <code>/alert USD RUB 80 above</code> - —É–≤–µ–¥–æ–º–∏—Ç –∫–æ–≥–¥–∞ USD –≤—ã—à–µ 80 —Ä—É–±.\n"
            "‚Ä¢ <code>/alert EUR RUB 90 below</code> - —É–≤–µ–¥–æ–º–∏—Ç –∫–æ–≥–¥–∞ EUR –Ω–∏–∂–µ 90 —Ä—É–±.\n\n"
            
            "ü§ñ <b>–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ò–ò –ü–æ–º–æ—â–Ω–∏–∫:</b>\n"
            "‚Ä¢ –û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ª—é–±—ã–º —Ç–µ–º–∞–º\n"
            "‚Ä¢ –ü–æ–º–æ–≥–∞–µ—Ç —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º–∏, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º\n"
            "‚Ä¢ –î–∞–µ—Ç —Å–æ–≤–µ—Ç—ã –ø–æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤—É, –∑–¥–æ—Ä–æ–≤—å—é, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º\n"
            "‚Ä¢ –û–±—â–∞–µ—Ç—Å—è –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã\n\n"
            
            "‚è∞ <b>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b>\n"
            "‚Ä¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏–π –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç\n"
            "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è\n\n"
            
            "üí° <b>–ò–ù–§–û–†–ú–ê–¶–ò–Ø</b>\n\n"
            "‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ –¶–ë –†–§ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏\n"
            "‚Ä¢ –ö—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è CoinGecko API\n"
            "‚Ä¢ –ò–ò –ø–æ–º–æ—â–Ω–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ DeepSeek AI\n"
            "‚Ä¢ –ö—É—Ä—Å—ã –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –¶–ë –†–§\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö"
        )
        
        await update.message.reply_text(
            help_text,
            parse_mode='HTML',
            reply_markup=get_main_menu_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /help: {e}")

async def stop_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop"""
    try:
        user = update.effective_user
        greeting = f", {user.first_name}!" if user.first_name else "!"
        
        await update.message.reply_text(
            f"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è{greeting} –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.\n"
            "–î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start",
            reply_markup=get_main_menu_keyboard()
        )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /stop: {e}")

def setup_commands(application):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥"""
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("stop", stop_command))
